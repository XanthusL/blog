<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSON on (≧▽≦)</title>
    <link>https://liyiheng.github.io/blog/tags/json/</link>
    <description>Recent content in JSON on (≧▽≦)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 22 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://liyiheng.github.io/blog/tags/json/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[译]Golang中JSON和结构体的组合使用</title>
      <link>https://liyiheng.github.io/blog/2017/06/%E8%AF%91golang%E4%B8%ADjson%E5%92%8C%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E7%BB%84%E5%90%88%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 22 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://liyiheng.github.io/blog/2017/06/%E8%AF%91golang%E4%B8%ADjson%E5%92%8C%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E7%BB%84%E5%90%88%E4%BD%BF%E7%94%A8/</guid>
      <description>&lt;p&gt;原文地址：http://attilaolah.eu/2014/09/10/json-and-struct-composition-in-go/
&lt;!-- raw HTML omitted --&gt;
假设你正在把一个JSON对象解码为Go的结构体。该JSON来自不受你控制的服务，因此你无法操作它的模式。但你想用不同的方式进行编码。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>